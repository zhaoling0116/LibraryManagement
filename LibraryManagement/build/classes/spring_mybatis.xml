<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.1.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
	http://www.springframework.org/schema/aop   
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
 	<!-- 扫描模型层所在包路径 -->
	<context:component-scan base-package="com.zhaoling.*.*.service.impl"></context:component-scan>
 
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
 	<!-- druid连接池，阿里巴巴开源JDBC连接池 -->
 	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
 		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="3" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
 	</bean>

 	<!-- c3p0连接池 -->
 	<!-- 
    <bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="autoCommitOnClose" value="true"/>
        <property name="initialPoolSize" value="5"/>
        <property name="minPoolSize" value="5"/>
        <property name="maxPoolSize" value="100"/>
        <property name="maxIdleTime" value="25200"/>
        <property name="acquireIncrement" value="5"/>
        <property name="idleConnectionTestPeriod" value="60"/>
        <property name="acquireRetryAttempts" value="30"/>
        <property name="maxStatements" value="0"/>
        <property name="maxStatementsPerConnection" value="100"/>
    </bean> 
     -->
 
 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
	    <!-- mapper和resultmap配置路径 --> 
	    <property name="mapperLocations"> 
	      <list> 
	        <value>classpath:sqlMap/*Mapper.xml</value> 
	      </list> 
	    </property> 	   
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" >
        <!-- 第一个参数是 sqlSessionFactory -->
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
 
  	<bean id="dao" class="com.zhaoling.framework.dao.Dao">
  		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
  	</bean>

	<!--  设置扫描根路径也就是你的mybatis的mapper接口所在包路径；--> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.zhaoling.*.mapper"/> 
	</bean> 


	<!-- TransactionManager 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource" ref="dataSource" />  
	</bean>  
    <!--启动spring事务注解功能-->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- aop声明式事务 -->
    <!-- 
	<aop:config>
		<aop:pointcut id="point1" expression="execution(* com.zhaoling.*.*.service.impl.*.*(..))" />		
		<aop:advisor advice-ref="txAdvice" pointcut-ref="point1" />
	</aop:config>
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED"  read-only="true" />
			<tx:method name="select*" propagation="REQUIRED"  read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	 -->

</beans>
	 

